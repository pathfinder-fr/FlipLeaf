@page "/_manage/edit/{**path}"
@model FlipLeaf.Pages.Manage.EditModel
@using FlipLeaf.Templating

@{ ViewData["Title"] = "Page Editor"; }

@section Styles
{
    <style type="text/css">
        .btn-toolbar > * {
            margin: 0 2px;
        }

        #Content {
            font-size: .9rem;
        }
    </style>
}

<h3>@Model.FormTemplate.Title</h3>

<nav aria-label="breadcrumb">
    <manage-breadcrumb path="@Model.Path"></manage-breadcrumb>
</nav>

<form method="post">
    <input type="hidden" asp-for="TemplateName" />

    <div class="form-row">
        @foreach (var field in Model.FormTemplate.Fields)
        {
            if (field.Id == null) continue;

            var hasValue = Model.Form.TryGetValue(field.Id, out var value);
            var fieldId = $"Fields_{field.Id}";
            var fieldName = $"Fields.{field.Id}";
            var isReadOnly = field.Visibility == FormTemplateFieldVisibility.ReadOnly;

            if (!hasValue && field.DefaultValue != null)
            {
                value = new Microsoft.Extensions.Primitives.StringValues(field.DefaultValue?.ToString());
            }

            if (field.Visibility == FormTemplateFieldVisibility.Hidden)
            {
                foreach (var valueItem in value)
                {
                    <input type="hidden" name="@fieldName" id="@fieldId" value="@valueItem" />
                }
                continue;
            }

            <div class="form-group col-md-@(field.Cols)">
                <label for="Field_@fieldId">
                    @field.Name
                    @if (!string.IsNullOrWhiteSpace(field.Description))
                    {
                        <small class="text-muted mt-1 ml-2">@field.Description</small>
                    }
                </label>
                @if (field.Type == FormTemplateFieldType.Text)
                {
                    <input type="text" id="@fieldId" name="@fieldName" value="@value" class="form-control" readonly="@isReadOnly" />
                }
                else if (field.Type == FormTemplateFieldType.Choice)
                {
                    <select id="@fieldId" name="@fieldName" class="form-control" readonly="@isReadOnly">
                        @if (field.Choices != null)
                        {
                            foreach (var choice in field.Choices)
                            {
                                <option value="@choice.Value" selected="@choice.IsSelected(value)">@choice.Text</option>
                            }
                        }
                    </select>
                }
                else if (field.Type == FormTemplateFieldType.MultiCheckBox)
                {
                    <div>
                        @if (field.Choices != null)
                        {
                            foreach (var choice in field.Choices)
                            {
                                var isChecked = value.Any(v => choice.IsSelected(v));
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="checkbox" name="@fieldName" id="@(fieldId)_@choice.Value" value="@choice.Value" checked="@choice.IsSelected(value)" readonly="@isReadOnly">
                                    <label class="form-check-label" for="@(fieldId)_@choice.Value">@choice.Text</label>
                                </div>
                            }
                        }
                    </div>
                }
            </div>
        }
    </div>

    <div class="form-group">
        <label asp-for="PageContent">
            @(Model.FormTemplate.ContentName ?? "PageContent")
            @if (!string.IsNullOrWhiteSpace(Model.FormTemplate.ContentDescription))
            {
                <small class="text-muted mt-1 ml-2">@Model.FormTemplate.ContentDescription</small>
            }
        </label>
        <textarea asp-for="PageContent" rows="10" class="form-control"></textarea>

    </div>

    <div class="form-group">
        <label asp-for="Comment"></label>
        <input asp-for="Comment" class="form-control" />
    </div>

    <div class="btn-toolbar">
        <button type="submit" name="Action" value="Save" class="btn btn-primary">Save</button>
        <button type="submit" name="Action" value="SaveAndContinue" class="btn btn-secondary">Save and Continue</button>
        <a asp-page="Show" asp-route-path="@Model.Path" class="btn btn-link">View</a>
    </div>
</form>
